class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if (root == NULL) {
            return ans;
        }
        
        queue<TreeNode*> q; // Create a queue
        q.push(root);
        
        while (!q.empty()) {
            int s = q.size();
            vector<int> vec;
            
            for (int i = 0; i < s; i++) {
                TreeNode* node = q.front();
                q.pop();
                
                if (node->left != NULL) {
                    q.push(node->left);
                }
                if (node->right != NULL) {
                    q.push(node->right);
                }
                vec.push_back(node->val);
            }
            
            ans.push_back(vec); // Add the current level to the result
        }
        
        reverse(ans.begin(), ans.end()); // Reverse the result to get bottom-up order
        return ans;
    }
};
